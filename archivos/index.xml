<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Archivos on Senchpimy</title><link>https://senchpimy.github.io/archivos/</link><description>Recent content in Archivos on Senchpimy</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 27 Oct 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://senchpimy.github.io/archivos/index.xml" rel="self" type="application/rss+xml"/><item><title>Go desde Lua</title><link>https://senchpimy.github.io/archivos/godesdelua/</link><pubDate>Sun, 27 Oct 2024 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/godesdelua/</guid><description>Llamando codigo de Go desde Lua Primero hay que tener un codigo/funciones de go como las siguiente:
func add(x int, y int) int{ return x+y } luego hay que importar la libreria necesaria para convertirlo a codigo de C y tambien indicar que dicha funcion va a ser exportada
import &amp;#34;C&amp;#34; //export Add func add(x int, y int) int{ return x+y } Tambien hay que agregar el paquete y una funcion main vacia, ademas de indicar que la funcion es publica convirtiendo la primera letra a mayuscula</description></item><item><title>Funcionalidades Extra de Tablet</title><link>https://senchpimy.github.io/archivos/tablet_utils/</link><pubDate>Wed, 18 Sep 2024 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/tablet_utils/</guid><description>Introduccion Compre una computadora la cual tiene la capacidad de doblarse como tablet y leer la entrada de dispositivos touch y en este caso tambien de una pluma pero en mi caso me gusta la experiencia de un administrador de ventanas, y aunque gnome por defecto tengo una buena experiencia con las diferentes funcionalidades de el hardware me gusta mas un sistema ligero, por lo que quise crear un programa con el cual pueda agregar diferentes funcionalidades usando esta pluma.</description></item><item><title>Genericos En Go</title><link>https://senchpimy.github.io/archivos/genericosgo/</link><pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/genericosgo/</guid><description>Los genericos se pueden declarar y usar funciones y tipos para que trabajen con cualquier set de tipos.
Ejemplo Un ejemplo del uso de valores no genericos es el siguiente:
// SumInts adds together the values of m. func SumInts(m map[string]int64) int64 { var s int64 for _, v := range m { s += v } return s } // SumFloats adds together the values of m. func SumFloats(m map[string]float64) float64 { var s float64 for _, v := range m { s += v } return s } func main() { // Initialize a map for the integer values ints := map[string]int64{ &amp;#34;first&amp;#34;: 34, &amp;#34;second&amp;#34;: 12, } // Initialize a map for the float values floats := map[string]float64{ &amp;#34;first&amp;#34;: 35.</description></item><item><title>LLamado de funciones con Ollama</title><link>https://senchpimy.github.io/archivos/funcionesconollama/</link><pubDate>Fri, 19 Jul 2024 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/funcionesconollama/</guid><description>Salida Estructurada en Llama.cpp En un modelo de lenguaje es aveces util poder estructurar la salida, es decir dado un prompt poder limitar la salida de tal forma que cumpla ciertas normas o formatos tal como json.
En llama.cpp existe la opcion de crear una gramatica formal mediante el formato de GBNF.
Gramatica Formal Describe que cadenas de un alfabeto de un Lenguaje formal son validas segun la sintaxis de el lenguaje.</description></item><item><title>Safetensors To GGUF</title><link>https://senchpimy.github.io/archivos/safetensorstogguf/</link><pubDate>Fri, 19 Jul 2024 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/safetensorstogguf/</guid><description>GGML/GGUF Ollama es un proyecto de codigo abierto que se utiliza para administrar, ejecutar y configurar LLMs. Especificamente se utiliza para ejecutar modelos de forma local.
Ollama puede usar es solo un administrador, como backend utiliza llama.cpp, llama.cpp es un backend completo, flexible y portatil de el cual leia los modelos con el formato GGML, pero conforme los modelos crecian y agregaban nuevas caracteristicas fue necesario crear un nuevo formato para mantener la conveniencia de tener un modelo en un solo archivo pues se requeria almacenar nueva informacion sobre el modelo.</description></item><item><title>Gripper</title><link>https://senchpimy.github.io/archivos/gripper/</link><pubDate>Wed, 19 Jun 2024 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/gripper/</guid><description>Este es un proyecto que realice con piezas que me sobraban.
Es un coche con llantas omnidireccionales que se mueve con un joystick y un brazo mecanico controlado con 5 servos mg90 que se controla desde una pagina web, esta pagina web se conecta con comunicacion serial con otro ESP32 el cual se conecta con el esp32 que esta en el coche, se comunican mediante el protocolo esp32Now.
La pagina web tiene un singleton que muestra el brazo y renderiza su poscicion actual en la misma pagina web, actualmente solo funciona en navegadores basados en chromium pues es este el unico que tiene una API serial.</description></item><item><title>hyperland</title><link>https://senchpimy.github.io/archivos/hyperland/</link><pubDate>Sat, 08 Jun 2024 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/hyperland/</guid><description>Hyperland es un compositor de wayland (osea un administrador de ventanas) y este al ser mas simple y minimalista para poder tener un sistema completo se necesita muchos otros programas diferentes
Hyperland Para la configuracion de este use la configuracion ya existente de Hyde ya que esta contiene scripts que configuran y declaran ciertas variables en el sistema para tener la menor cantidad de problemas de compatibilidad con otros programas, lo que modifique en este caso fue el teclado y algunas configuraciones de la teclas:</description></item><item><title>owncloud</title><link>https://senchpimy.github.io/archivos/zig_con_c/</link><pubDate>Sat, 04 May 2024 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/zig_con_c/</guid><description>Zig Zig es un &amp;ldquo;nuevo&amp;rdquo; lenguaje de programacion que se enfoca en ser lo m√°s compatible con C como sea posible, pero teniendo una sintaxis y ecosistema moderno, para probarlo cree este programa que crea una ventana usando la libreria &amp;ldquo;Xlib&amp;rdquo; que esta totalmente escrita en C.
Este es el codigo en C:
#include &amp;lt;X11/Xlib.h&amp;gt; #include &amp;lt;stdio.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; #include &amp;lt;string.h&amp;gt; int main(void) { Display *d; Window w; XEvent e; const char *msg = &amp;#34;EXAMPLE&amp;#34;; int s; d = XOpenDisplay(NULL); if (d == NULL) { fprintf(stderr, &amp;#34;Cannot open display\n&amp;#34;); exit(1); } s = DefaultScreen(d); w = XCreateSimpleWindow(d, RootWindow(d, s), 10, 10, 100, 100, 1, BlackPixel(d, s), WhitePixel(d, s)); XSelectInput(d, w, ExposureMask | KeyPressMask | ButtonPressMask | ButtonReleaseMask | PointerMotionMask); XMapWindow(d, w); int i = 0; while (1) { XNextEvent(d, &amp;amp;e); if (e.</description></item><item><title>Reloj Calendario</title><link>https://senchpimy.github.io/archivos/despertadortouch/</link><pubDate>Sun, 31 Mar 2024 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/despertadortouch/</guid><description>Introduccion Quise usar un reloj inteligente, pero queria que tambien mostrara mis pendientes y un calendario y encontre varios como el Amazon Echo Show pero no se veia como queria, seria muy aburrido solo comprarlo y no funcionaria como querria
Pantalla Compre una pantalla touch de aliexpres y un raspberry pi zero 2w
Obteniendo los datos Para obtener los datos aproveche que uso obsidian y que uso syncthing, obsidian con el plugin de fullcalendar puedo crear eventos en el calendario desde mi celular y como se sincronizan automaticamente con mi servidor de syncthing que usa mi raspberry Pi que uso como servidor, puedo obtener cualquier nuevo evento que agregue, luego con un servidor de python hice un programa que lea todos los pendientes, y convierte en yaml en json de tal forma que los pueda representar en mi despertador.</description></item><item><title>Linux Module</title><link>https://senchpimy.github.io/archivos/linux_module/</link><pubDate>Tue, 16 Jan 2024 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/linux_module/</guid><description>Estoy haciendo un servidor grafico para sistemas embebidos que pueden ejecutar linux, sin embargo para manejar el mouse decidi usar las lecturas analogicas de un joystick, de la misma forma que uno puede leer desde /dev/input/mouse0 mi intencion es hacer lo mismo, pero con un joystick
Comunicacion Serial Algunos sistemas como la *Raspberry Pi * * no pueden leer entradas analogicas directamente, entonces para estos casos escribi un programa en un arduino, el plan es crear una comunicacion serial entre los dos para comunicar las lecturas analogicas de del joystick, este es el codigo que desarrolle:</description></item><item><title>Octoprint</title><link>https://senchpimy.github.io/archivos/octoprint/</link><pubDate>Tue, 16 Jan 2024 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/octoprint/</guid><description>Octoprint es un programa que crea un servidor en el podemos manejar y monitorear impresoras 3d, actualmente lo estoy ejecutando en una raspberry pi, pensaba ejecutarlo en un dispositivo android, pero necesito rootearlo para poder tener permiso a la unica salida de datos, lo unico que no se como hacer es de alguna forma poder ejecutar comandos definidos, esto pues acomode un servomotor al apagador de la impresora para poder tambien poder prenderla y apagarla a la distancia, el apagador esta en la fuente de poder y el codigo que ejecuto es el siguiente</description></item><item><title>Robotcito</title><link>https://senchpimy.github.io/archivos/robotcito/</link><pubDate>Tue, 16 Jan 2024 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/robotcito/</guid><description>Este proyecto consiste en un robot humanoide, todos los modelos fueron originales pero me base en otros ya ecistentes, las pinzas fueron adaptadas de un modelo ya existente</description></item><item><title>C en Rust</title><link>https://senchpimy.github.io/archivos/cenrust/</link><pubDate>Tue, 05 Dec 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/cenrust/</guid><description>Este es un peque√±o resumen de como usar codigo de C existente en proyectos de Rust.
build.rs Este es un peque√±o programa que se encargara de compilar el codigo de C para despues a√±adirlo a el codigo de Rust.
En este caso especificamos el codigo y la compilacion
build.rs
extern crate cc; //Importamos la libreria que nos ayda a compilar fn main() { cc::Build::new() .file(&amp;#34;src/contar.c&amp;#34;) // Especificamos el archivo .compile(&amp;#34;libcontar.a&amp;#34;); // especificamos la salida } Y a√±adimos la dependencia de el script bajo esta seccion en el archivo Cargo.</description></item><item><title>Rust en RiscV</title><link>https://senchpimy.github.io/archivos/rust_milkv/</link><pubDate>Tue, 05 Dec 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/rust_milkv/</guid><description>Este es una guia basada en esta guia.
Suponiendo que ya se tiene el milk V con linux instalado y acceso a una terminal.
Primero hay que descargar o compilar el toolchain para compilar rust en riscv, yo lo compile para evitar errores de compatibilidad
Compilacion Primero hay que descargar la toolchain desde aqui, al momento de escribir esto, las instrucciones para compilar estan en el reademe de el repositorio en donde despues de 20 min de compilacion obtuve una carpeta llamada build en donde se encuentran los compiladores y el linker de esta arquitectura</description></item><item><title>Marlin</title><link>https://senchpimy.github.io/archivos/marlin/</link><pubDate>Sat, 28 Oct 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/marlin/</guid><description>Marlin es el firmware mas usado para las impresoras 3D y al hacerle modificaciones fisicas a la mia debia por lo tanto hacerle modificaciones a el firmware de la impresora. Aqui esta como lo hice.
Primero tuve que programar la placa controladora por defecto que traia mi Ender 3 en este caso era la placa Creality V1.1.4, para esto tuve que quemarle el bootloader de arduino a la placa, para esto tuve que hacer click en Archivos&amp;amp;gtEjemplos&amp;amp;gtArduinoISP&amp;amp;gtArduinoISP y en programador seleccione AVRISP mkII y el puerto correspondiente que me marcaba el Arduino IDE, subi el programa a un Arduino UNO comun, luego tuve que agregar la placa se Sanguino de a las informacion de Arduino para que este la pueda detectar, para esto tuve que hacer click en Archivo&amp;amp;gtPreferencias y saldra un aventana, en esta ventana debemos buscar el campo de texto que dice Additional Boards Manager URLs y agregar el siguiente enlace https://raw.</description></item><item><title>Reloj Multiusos</title><link>https://senchpimy.github.io/archivos/relojmultiusos/</link><pubDate>Sat, 21 Oct 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/relojmultiusos/</guid><description>En este proyecto use un despertador antiguo que no servia y lo &amp;ldquo;repare&amp;rdquo; y ademas a√±adi m√°s fucnionalidades.
Primero use un esp32 como microcontrolador para el proyecto, pues este ya tiene coneccion a wifi y bluetooth, use un display de 7 segmentos para matener el formato de la hora, especificamente use el TM1637, y el programa de la hora se ejecuta en el sgundo core de el esp32. Ademas este usa los botones que el desperator ya traia para dar la hora.</description></item><item><title>Osciloscopio</title><link>https://senchpimy.github.io/archivos/osciloscopio/</link><pubDate>Fri, 15 Sep 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/osciloscopio/</guid><description>Este es un proyecto que vi en internet, un arduino siendo usado como un osciloscopio, usando una pantalla oled de 64x128, en este enlace esta el blog y el video del que me guie fue el siguiente:
Y si accedemos a el vlog en donde se subio podemos ver el diagrama:
Pero a mi no me funcino ese diagrama tal cual, le tuve que hacer una serie de modificaciones, primero desconecte la entrada marcada como SIG-IN de la tierra, asi como no utilice ningun capacitor aunque el diagrama tenga 3, y finalmente descarte el uso del led, por lo que finalmente el diagrama quedo de la siguiente forma para mi</description></item><item><title>VSFTP</title><link>https://senchpimy.github.io/archivos/ftp/</link><pubDate>Tue, 05 Sep 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/ftp/</guid><description>FTP es un protocolo para transmitir archivos, desde hace tiempo he intentado tener un servidor dentro de mi red local el cual funcione con unos discos que tengo, e intentado usar OpenMediaVault, pero tiene algunos bugs y no me gusto, tambien intente usar Owncloud, pero parece que no que la empresa que lo desarrolla no le quiere seguir dando mantenimiento y una instalacion debian desde apt no funciona pues la version de php en debian no es compatible con la que requiere owncloud, y la imagen de docker tiene problemas en la configuracion del servidor, entonces mejor decidi usar un simple servidor ftp</description></item><item><title>Stable Diffusion Regional Prompting</title><link>https://senchpimy.github.io/archivos/stablediffusionregional/</link><pubDate>Fri, 04 Aug 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/stablediffusionregional/</guid><description>Stable Diffusion Regional Prompt es una extension para la interfaz stable-diffusion-webui, este extension nos permite generar imagenes de tal manera que ciertos elementos esten es un espacio espefico de la imagen generada, pero este elemento se va a colocar de tal manera que no parece agregado de forma aparte.
Es decir podemos dar un prompt especifico para cierta region y con esto se generara lo que especificamos y lo acoplara de forma natural al resto de la imagen.</description></item><item><title>recuperarImpresion</title><link>https://senchpimy.github.io/archivos/recuperarimpresion/</link><pubDate>Wed, 02 Aug 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/recuperarimpresion/</guid><description>Cuando estaba imprimiendo algo que ya llevaba varios dias de avanzado y esta tuvo un error al 70% de la pieza, no queria volver a imprimir todo otra vez, asi que tuve que buscar como poder recuperar una impresion. Este metodo funciona editando el Gcode de la pieza, puede haber otros metodos como imprimir por separado la pieza faltante
Lo primero y lo m√°s importante que hay que hacer es no mover la pieza, intentar si es posible tener la cama caliente para evitar que la pieza de despegue de esta, y si esta en una cama con removible, no moverla ni un poco, pues esto puede causar movimientos en la figura final que no solo se notara el cambio de capa, sino tambien puede hacer que la pieza tenga un punto de quiebre en esa capa.</description></item><item><title>Mano Robot</title><link>https://senchpimy.github.io/archivos/mano/</link><pubDate>Fri, 28 Jul 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/mano/</guid><description>Construi una mano que hasta cierto nivel sigue los movientos de otra mano en base a una camara, para esto escribi el siguiente programa:
import cv2 import os import numpy as np import mediapipe as mp webcam=cv2.VideoCapture(0) mp_hand= mp.solutions.hands hands = mp_hand.Hands() mp_drawing_utils = mp.solutions.drawing_utils def distancia( punto1,#:mp.framework.formats.landmark_pb2.NormalizedLandmark punto2#:mp.framework.formats.landmark_pb2.NormalizedLandmark )-&amp;gt;float: x=(punto1.x-punto2.x) y=(punto1.y-punto2.y) return np.sqrt(x\*\*2+y\*\*2)\*1000 def regla_de_tres(referencia:float, mapear:float)-&amp;gt;int: #if mapear&amp;gt;referencia:return 180 v = referencia/350 p = v\*mapear if int(p)&amp;gt;180:return 180 return int(p) while webcam.</description></item><item><title>Teclado V2</title><link>https://senchpimy.github.io/archivos/teclado2/</link><pubDate>Fri, 28 Jul 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/teclado2/</guid><description>El primer teclado que hice, tuvo varios errores, la cabeza de los tornillos quedaban muy afuera de la base y haceian que al momento de escribir el teclado se deslizara, las pantallas que escoji aunque les di un uso, a veces no funcionaban de la forma esperada, las perillas quedaron muy cerca de los bonotes y no se pueden mover tan facil, etc.
Entonces mejor decidi hacer una nueva version de el teclado, y para esto lo primero que cambie fue el modelo 3D, este modelo tambien consisten en dos teclados separados, pero me intereso la idea de aprovechar la impresion 3D para darles un relieve, primero quise usar este fork de el modelo original del teclado dactyl manuform, pues este repositorio tiene una forma estandar de crear estos teclados y es muy facil de hacer modificaciones, pero al ver los forks de este fork me encontre con este otro fork que no solo parece que incluye mejoras en la generacion de la geometria, pues ha diferencia del primero este usa python para generar los modelos 3D, otra de las caracteristicas por la cual lo escoji es por que por defecto tiene la opcion de generar los modelos con un espacio para una pantalla oled de 128x32 con varios metodos para colocar esta en su lugar, por lo que esto me ahorraria este trabajo de modificar el dise√±o, y finalmente este tiene la opcion de generar los modelos con un espacio abierto para colocar cualquier adaptador que quepa en ese lugar, dando flexibilidad sobre que microcontrollador se puede usar.</description></item><item><title>Stable Diffusion</title><link>https://senchpimy.github.io/archivos/stablediffusion/</link><pubDate>Thu, 20 Jul 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/stablediffusion/</guid><description>Stable Diffusion, es un modelo de inteligencia artifical que sirve para generar imagenes, lo bueno de este modeloes que es open source y se puede ejecutar de forma local, entonces lo quise ejecutar en mi propia maquina, entonces vi que una de las formas m√°s rapida de poder usar este modelo es usando el programa stable-diffusion-webui, este programa funciona en casi todas las computadoras de forma automatica, solo hay que ejecutar el script de instalacion y asi deberia funcionar, pero en mi computadora y por el hardware que tengo tuve que hacer unos pasos extras.</description></item><item><title>Marmol</title><link>https://senchpimy.github.io/archivos/marmol/</link><pubDate>Fri, 30 Jun 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/marmol/</guid><description>Este es un programa inspirado en otro programa llamado obsidian, este primero es un interprete de archivos de markdown, en el cual se pueden guardar notas y en estas se renderizaran despues con las reglas de markdown correspondientes.
Pero no me gusto este programa pues consume mucha memoria RAM y no hay una forma dentro del programa de automatizar los respaldos mas que por extenciones y solo por medio de git, entonces escribi este programa para corregir esto, ahora le faltan algunas cosas que me gustaria agregar asi, pero tambien tiene otras caracteristicas que obsidian no tiene.</description></item><item><title>Lunar Vim</title><link>https://senchpimy.github.io/archivos/lvim/</link><pubDate>Thu, 29 Jun 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/lvim/</guid><description>Lunar Nvim es una configuracion de Neovim que incluye muchas cosas por default que son bastante utiles y que personalmente yo no pude configurar bien en mi configuracion, aunque funciona muy bien aun asi lo tuve que configurar en algunas cosas y este es el archivo de configuracion que agregue
vim.keymap.set(&amp;#34;n&amp;#34;, &amp;#34;nh&amp;#34;, &amp;#34;:HopWord&amp;#34;) vim.keymap.set(&amp;#34;n&amp;#34;, &amp;#34;&amp;#34;, &amp;#34;:BufferLineCycleNext&amp;#34;) vim.keymap.set(&amp;#34;n&amp;#34;, &amp;#34;&amp;#34;, &amp;#34;:BufferLineCyclePrev&amp;#34;) vim.keymap.set(&amp;#34;n&amp;#34;, &amp;#34;&amp;#34;, &amp;#34;:BufferLinePickClose&amp;#34;) vim.wo.relativenumber = true lvim.log.level = &amp;#34;warn&amp;#34; lvim.format\_on\_save.enabled = false lvim.</description></item><item><title>Sscache y Mold</title><link>https://senchpimy.github.io/archivos/sscache_mold/</link><pubDate>Thu, 29 Jun 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/sscache_mold/</guid><description>Estas herramientas ayudan a reducir los tiempos de compilacion.
Sccache lo instale con cargo, y para usarlo con gcc se ocupa antes del comando:
sccache gcc -o foo.o -c foo.c Y para rust basta con exportar la variable siguiente:
export RUSTC\_WRAPPER=/path/to/sccache Reduce los tiempos de compilacion al almacenar los resultados de compilacion, lo que hace que solo compile los archivos necesarios.
Mold es un linkeador que funciona igualmente para lenguajes compilados, cuando un programa es compilado cada archivo es convertido en un archivo .</description></item><item><title>Teclado</title><link>https://senchpimy.github.io/archivos/teclado/</link><pubDate>Fri, 23 Jun 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/teclado/</guid><description>Dise√±e y programe un teclado, ademas que lo imprimi. El teclado del el cual me base fue el lily58, pues ya que este se me hizo interesante y habia archivos disponibles para poder imprimirlo.
Para poder hacerlo necesite comprar unos botones mecanicos, pues estos son los que dan la flexibilidad de poder usarlos en cualquier poscicion y de cualquier manera, tambien necesite unos arduino pro-micro, estos en especificos pues su microprocesador a diferencia de otros arduino a excepcion del Leonardo ya tiene incluida la capacidad de ser leido como un periferico por las computadoras solo con el uso de unas librerias, pero el Leonardo es demasiado grande y costoso, pues se van a necesitar dos de estos elementos, uno para cada mitad del teclado</description></item><item><title>Preparar un Servidor</title><link>https://senchpimy.github.io/archivos/servidor/</link><pubDate>Fri, 09 Jun 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/servidor/</guid><description>Cuando se tiene un nuevo servidor el cual uno esta rentando, hay algunas configuraciones que se tienen que llevar a cabo en el servidor para poder hacerlo m√°s seguro. Esta guia esta enfocada a servidores Linux
Actualizar el sistema Muchas veces podriamos estar instalando alguna imagen de sistema, que sea antigua y por lo tanto esta puede que no tenga los ultimos parches de seguridad de cualquier programa que pudiesemos estar ejecutando, asi que lo primero seria actualizar el sistema, como hacer esto varia en cada distribuci√≥n, por lo que tambien es bueno actualizar los servidores de forma relgular, en debian existe un programa llamado unnatended-upgrades</description></item><item><title>owncloud</title><link>https://senchpimy.github.io/archivos/owncloud/</link><pubDate>Thu, 08 Jun 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/owncloud/</guid><description>Owncloud es un servicio que te permite tener tu propia nube Primero instale docker, que es un poco complejo pues el paquete en el repositorio no es el docker completo, es decir lo suqiente no funciona
sudo apt install docker Por lo que tuve que seguir las instrucciones de aqui
Luego cree el grupo docker y a√±adi mi usuario
gropadd docker sudo usermod -aG docker pi Luego lo active desde docker</description></item><item><title>rust-arduino-carro</title><link>https://senchpimy.github.io/archivos/rust-arduino-carro/</link><pubDate>Sat, 04 Feb 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/rust-arduino-carro/</guid><description>Despues de hacer el arduino blink, pense en hacer algo m√°s complicado usando rust y arduino, plo que pense en hacer en un robot con un sensor ultrasonico de distancia que pueda detectar cualquier objeto y que se mueva si es que la distancia hacia el objeto es inferior a una variable. Use un arduino uno, un sensor ultrasonico HC-SR04, una placa personal usando el chip l298n-d que funciona como puente H, dos motores y dos pilas de 9v</description></item><item><title>Ngrok Para Exponer un Puerto Local a Internet</title><link>https://senchpimy.github.io/archivos/ngrok_reverse_proxy/</link><pubDate>Fri, 03 Feb 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/ngrok_reverse_proxy/</guid><description>Introducci√≥n: C√≥mo Exponer un Puerto Local a Internet con ngrok Cuando desarrollamos una aplicaci√≥n o un servicio en nuestra m√°quina local, a veces necesitamos acceder a √©l desde fuera de nuestra red local. Podr√≠amos estar mostrando un prototipo a un cliente. El m√©todo tradicional implicar√≠a configurar un servidor p√∫blico, gestionar un dominio y configurar la red, lo cual puede ser complejo y lento.
Una soluci√≥n mucho m√°s sencilla y r√°pida es usar una herramienta de t√∫neling como ngrok.</description></item><item><title>Paginas Estaticas</title><link>https://senchpimy.github.io/archivos/estaticas/</link><pubDate>Fri, 03 Feb 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/estaticas/</guid><description>Una forma de mostrar paginas estaticas es usando nginx, para lograr esto hay que tener una pagina estatica la cual mostrar, por ejemplo yo hice esta pagina, como se puede ver, esta pagina solo tiene el index y una pagina, ademas de otros archivos que irian en esta pagina.
Hay que guardar estos archivos en una carpeta, en la cual no debe tener nada mas que lo que queremos mostrar en la pagina web, pues de lo contrario cualquier otro archivo extra que este en este directorio sera servido como los otros archivos.</description></item><item><title>Startpage</title><link>https://senchpimy.github.io/archivos/startpage/</link><pubDate>Mon, 30 Jan 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/startpage/</guid><description>Una startpage es una pagina que sale al principio de tu navegador cada que abres un nuevo tab o al abrirlo por primera vez, yo lo hice en dos navegadores, en Qutebrowser y en Firefox, en en primero es bastante simple pues tan solo basta con modificar el archivo de configuraci√≥n de este programa, para esto hay que entrar en la carpeta de ~/.config/qutebrowser, y en esta carpeta hay que modificar (o crear el archivo y agregar lo siguiente) el archivo config.</description></item><item><title>Pagina Profesional</title><link>https://senchpimy.github.io/archivos/profesional/</link><pubDate>Sun, 22 Jan 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/profesional/</guid><description>Viendo que mi pagina se queda algo simple, pero aun asi me gusta, decidi hacer esta misma pagina, con los mismos contenidos pero con otros estilos, y para no tener una copia de todos los archivos que tengo aqui, que tendria que sincronizar cada vez que haga una modificaci√≥n, pense en usar mi pagina principal para obtener el html de su contenido pero cambiar sus estilos, para hacer esto hice un simple prorama en go que hace especificamente esto:</description></item><item><title>Gitea</title><link>https://senchpimy.github.io/archivos/gitea/</link><pubDate>Sat, 21 Jan 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/gitea/</guid><description>Gitea es un programa OpenSource para poder hostear una instancia de un servidor de git, y aprovechando que ya tengo un dominio con una computadora quise hostear mis propios proyectos usando este programa, este programa es de facil instalacion, pero si le quisieras modificar alguna plantilla hay que tener cuidado en que carpeta y usuario lo instala, primero hay que descargar el binario y luego hacerlo ejecutable.
wget -O gitea https://dl.</description></item><item><title>Minimonitor</title><link>https://senchpimy.github.io/archivos/minimonitor/</link><pubDate>Wed, 18 Jan 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/minimonitor/</guid><description>Compre el siguiente monitor para poder usarlo con mi raspberry pi el monitor que compre fue el siguiente
Y como se puede observar, es muy simple el modelo y por eso lo eleg√≠, pense en hacerle un carcasa pues est modelo no cuenta con una ni con el espacio como para ponerle tornillos asi que le dise√±e una en 3D y la imprimi. Lo primero que dise√±e fue la parte delantera, en esta parte los botonoes y la pantalla estaran, para esto los dise√±e uno al lado del otro de cierta forma que incluso aunque los botones esten tapados estos se puedan presionar.</description></item><item><title>Ender3 como CNC</title><link>https://senchpimy.github.io/archivos/soporteherramientas/</link><pubDate>Tue, 17 Jan 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/soporteherramientas/</guid><description>Ya teniendo las herramientas que queria, el laser, un taladro y finalmente su extrusor, asi que ahora le hice un soporrte para poder guardar estas herramientas en la parte superior de la impresora, del mismo modo que el soporte de el filamento esta montado.
Entonces tome el modelo en el que montan las herramientas y lo modifique para que tuviera espacio para poder montarse en la parte superior ademas de espacio para las dos herramientas cuando no se estan ocupando.</description></item><item><title>Servidor Archivos</title><link>https://senchpimy.github.io/archivos/servidorarchivos/</link><pubDate>Tue, 17 Jan 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/servidorarchivos/</guid><description>Creando otros proyectos me vi en la necesidad de poder crear un servidor al cual con una simple request POST sobre https con el debido json poder recibir cualquier archivo que requiera, para esto cree este programa el cual hace justamente esto
Solo hay que configurar un archivo .json, el cual contiene los archivos los cuales pueden ser requeridos, pero considero que lo deberia cambiar, ya que para conseguir un archivo es necesario saber la ubicacion de el archivo en la maquina que lo hostea, lo cual puede causar problemas.</description></item><item><title>Dirpath</title><link>https://senchpimy.github.io/archivos/dirpath/</link><pubDate>Mon, 16 Jan 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/dirpath/</guid><description>Cuando estaba modificando ZSH, me di cuenta que el prompt starship, por el que estaba cambiando oh-my-zsh no mostraba el path de los archivos como a mi gustaba, es decir starship mostraba el path asi: &amp;hellip;/Actual/directorio/subcarpeta, mientras que el que me gustaba de oh-my-zsh lo mostaraba de forma mas corta, ese mismo ejemplo seria ~/Ac/di/subcarpeta, el cual se me hacia mas corto y conciso, afortundamente starship nos permite ejecutar cualquier comando y tener la salida en el prompt.</description></item><item><title>Selector de Archivos</title><link>https://senchpimy.github.io/archivos/selector/</link><pubDate>Mon, 16 Jan 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/selector/</guid><description>Cuando estaba haciendo mi programa para mandar mensajes me di cuenta que al haber tantos navegadores de archivos no habia un estandar para invocar un selector de archivos y tener el string de la ubicacion de este archivo que fue seleccionado, con esto en mente cree en rust un selecotr de archivos simple, este solo muestra los contenidos de una carpeta y al hacer click en algun archivo este regresa el string de su ubicaci√≥n, este programa tiene un buscador y ademas de que puede ser ejecutado de forma en la que solo aparezacan archivos de determinado tipo</description></item><item><title>Configuracion de zsh</title><link>https://senchpimy.github.io/archivos/zsh/</link><pubDate>Sun, 15 Jan 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/zsh/</guid><description>Zsh tambien conovida como Z shell es un interprete de comandos para sistemas Unix, es la shell que viene por defecto en todas las mac.Es similar a la shell bash, pero en mi opinion tiene varias caracteristicas por defecto que la hacen mas moderna. Para aumentar sus capabilidades un administrador de plugins muy facil de instalar, que ya incluye varios plugins, modificaciones y alias asi como un prompt personalizado, este administrador de plugins se llama Oh-My-Zsh, lo malo de este es que yo siento que puede hacer la shell muy lenta al cargar por primera vez, asi que lo desinstale y solo agregue lo que necitaba y prompt personalizado, lo demas lo deseche y siento que ahor atengo mas control pues ahora se bien que hace cada cosa y el prompt tiene caracteristicas que no pense que podia tener asi como le quite otras que no me gustaba que tuviera.</description></item><item><title>Subdominios</title><link>https://senchpimy.github.io/archivos/subdominios/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/subdominios/</guid><description>Cuando tienes un servidor pero muchas ideas que hacer con el, tener un solo dominio no basta para todo, para esto sirven los subdominios y la forma de hacerlos es muy sencillo, para esto hay que tener ya un servidor, un dominio y nginx. Para esto necesitamos un servicio que se ejecute en algun puerto que este libre, aqui hice una simple programa en go que se ejeuta en el puerto 3001, por lo que si se ejecutara de forma local con escribir en el navegador localhost:3001 podriamos ver esta pagina, este programa es bastante simple, genera una pagina web la cual tiene un espacio para poder entrar texto, cualquier texto que entre sera guardado en un archivo y los contenidos de este archivo sera mostrado en la misma pagina web al comienzo.</description></item><item><title>Rust en Arduino</title><link>https://senchpimy.github.io/archivos/rust-arduino-blink/</link><pubDate>Sat, 07 Jan 2023 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/rust-arduino-blink/</guid><description>Rust es un lenguaje de bajo nivel que me gustaria aprender, aqui hay un ejemplo de el equivalente al programa blink, para el arduino uno usando Rust.
Primero hay que instalar los programas necesarios para linkear y compilar para el arduino, en arch son las siguientes:
pacman -S arduino-avr-core pacman -S avr-gcc
Luego hay que crear un nuevo proyecto de rust usando cargo.
En este proyecto hay que usar una version diferente de el compilador por lo que en la carpeta hay que ejecutar rustup override set nightly, luego ya podemos modificar al archivo Cargo.</description></item><item><title>DWM Status</title><link>https://senchpimy.github.io/archivos/dwmstatus/</link><pubDate>Wed, 09 Nov 2022 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/dwmstatus/</guid><description>Dwm no tiene mucha configuracion por defecto por lo mismo de ser muy minimo, por lo que para poder hacerlo como AwesomeWM hay que hacer muchas maromas para poder tenerlo funcional.
Por defecto y sin ningun cambio Dwm tiene en la esquina superior derecha un texto en el cual se lee dwm-xx donde xx es la version de dwm, para poder cambiar este texto con el comando xsetroot -name &amp;ldquo;XXX&amp;rdquo; donde XXX es el texto que va a salir en esta esquina, y con esto podemos hacer que salida de un comando sea el texto de que aparecera en esa parte por ejemplo xsetroot -name &amp;ldquo;$(date)&amp;rdquo; pondra en esa esquina la salida de el comando date que es la fecha, con esto en cuenta el programa dwmblocks nos da una implementacion de poder colocar la salida de cualquier comando en esta parte de la pantalla, si compilamos el programa con sudo make clean install y lo ejecutamos como dwmblocks podremos ver que en la esquina tendremos la fecha y cuanta memoria esta disponible y cuant a ha sido utilizada y que estos valores cambian cada cierto tiempo, estos son los ejemplos que vienen en el archivo blocks.</description></item><item><title>Ender3 como CNC</title><link>https://senchpimy.github.io/archivos/soporte/</link><pubDate>Wed, 09 Nov 2022 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/soporte/</guid><description>Este proyecto es una modificacion a mi impresora una ender 3 para que esta sea capaza de funcionar como una CNC, lo que hice fue imprimir este adaptador (Version 4 para la ender 3) pues es una modificacion que me permitira hacer que a la ender 3 se le puedan montar varias herramientas de forma rapida sin tener la preocupacion que lo que se valla a montar no quede centrado.</description></item><item><title>Ender3 con Laser</title><link>https://senchpimy.github.io/archivos/laser/</link><pubDate>Wed, 09 Nov 2022 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/laser/</guid><description>Este proyecto es una modificacion a mi impresora una ender 3 para que esta sea capaza de funcionar como una CNC, lo que hice fue imprimir este adaptador (Version 4 para la ender 3) pues es una modificacion que me permitira hacer que a la ender 3 se le puedan montar varias herramientas de forma rapida sin tener la preocupacion que lo que se valla a montar no quede centrado.</description></item><item><title>Extrusor Ender 3</title><link>https://senchpimy.github.io/archivos/extrusor/</link><pubDate>Wed, 09 Nov 2022 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/extrusor/</guid><description>Este proyecto es una modificacion a mi impresora una ender 3 para que esta sea capaza de funcionar como una CNC, lo que hice fue imprimir este adaptador (Version 4 para la ender 3) pues es una modificacion que me permitira hacer que a la ender 3 se le puedan montar varias herramientas de forma rapida sin tener la preocupacion que lo que se valla a montar no quede centrado.</description></item><item><title>Configuracion de Marlin Para la Ender3</title><link>https://senchpimy.github.io/archivos/configsmarlin/</link><pubDate>Sat, 29 Oct 2022 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/configsmarlin/</guid><description>Con los 4 archivos de configuracion tenemos muchas de modificacion posibilidades para la ender 3, en mi caso hice las siguientes, pues modifique mi impresora desde el hardware agregandole un nuevo hotend (Maxiwatt) y el extrusor BondtechBMG necesita modificaciones al firmware
_Statusscreen.h _statusscreen.h es un archivo que contiene un bitmap de la pantalla de status que contiene el logo de Marlin, pero como me gusta Serial Experiments Lain se lo voy a cambiar a esta imagen:</description></item><item><title>Marlin para la Ender 3</title><link>https://senchpimy.github.io/archivos/ender3marlin/</link><pubDate>Sat, 29 Oct 2022 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/ender3marlin/</guid><description>Para poder usar y modificar el marlin para la ender 3 primero debemos de descargar el marlin desde la pgina como archivo zip y luego descomprimirlo o clonandolo de github con git clone https://github.com/MarlinFirmware/Marlin.git
Despues de tener los archivos tenemos que abrir la carpeta que dice Marlin y ahi borramos los archivos Configuration.h y Configuration_adv.h
Estos archivos los tenemos que reemplazar por los archivos que encontraremos en https://github.com/MarlinFirmware/Configurations, en el cual en la parte de Readme/Branches seleccionaremos en Browse de la version de Marlin que tengamos, en el repositorio nos iremos a config&amp;amp;gtexamples en esta seccion estan todos los ejemplos de Marlin para diferentes impresoras y marcas, como yo tengo una ender 3 me ire a Creality&amp;lt;Ender3, aqui hay varias carpetas y cada una es el nombre de una placa para la ender 3 como yo estoy usasndo la placa CrealityV1, hare click en esa.</description></item><item><title>PBM</title><link>https://senchpimy.github.io/archivos/pbm/</link><pubDate>Wed, 26 Oct 2022 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/pbm/</guid><description>PBM es un programa escrito en python que es para el control de backups, este programa funciona como git, pero algo diferente, ya que esta no guarda una copia de los archivos que se hayan a√±adido a git, en su lugar este programa obtiene el hash SHA512 de todos los archivos que se hayan a√±adido, lo que hace que se ahorre espacio a comparacion de git pero no se pueden recuperar archivos, este programa solo mostrara los archivos que se hayan eliminado o que hayan cambiado en comparacion a el hash que el programa obtuvo cuando se creo</description></item><item><title>sovl</title><link>https://senchpimy.github.io/archivos/sovl/</link><pubDate>Wed, 26 Oct 2022 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/sovl/</guid><description>Sovl es una aplicacion que funciona como frontend para mpc y pamixer, este programa lee un archivo de configuracion que esta &amp;quot;~/.config/sovl/&amp;quot; y se llama config.ini, este archivo debe comfigurarse como un archivo .toml, y debe contener la configuracion de la aplicacion, esta configuracion debe tener la configuracion de las ventanas, botones y deslizadores, esta configuracion debe incluir el tama√±o, poscicion, funcion y estilo de cada uno de los elementos, cuando se ejecuta el programa este lee la configuracion y se modifica en base a esto, por lo que cada vez que se quieran ver los cambios se necesita terminar y volver a ejecutar la aplicacion, un ejemplo de esta configuracion es el siguiente:</description></item><item><title>gault</title><link>https://senchpimy.github.io/archivos/gault/</link><pubDate>Mon, 24 Oct 2022 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/gault/</guid><description>Gault es una copia de OpenMediaVault, pero esta es mas simple y en menos codigo, escrita solo con Go, y en lo que he probado, esta version que hice no tiene problema para montar discos externos y usarlos para un servidor samba como me paso cuando use esta aplicacion, este programa tiene una menor probabilidad de errores al ser mas simple, pero por el momento al diferencia de OpenMediaVault, este prgrama todavia no tiene soporte para hacer servidores ftp y nfs, pero en algun momento lo agreagare, otro lado negativo de mi programa es que los posibles errores que puedan suceder no son reportados en el GUI y algunos no son muy claros.</description></item><item><title>AwesomeWM</title><link>https://senchpimy.github.io/archivos/awesome/</link><pubDate>Thu, 06 Oct 2022 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/awesome/</guid><description>Mi configuracion de Awesomewm incluye los complementos de lain, awmodoro, Collision y awesome-wm-widgets.
LAIN: Estos archivos agregan widgets y layouts para awesome. AWMODORO: Este archivo agrega una peque√±a barra en la parte superior que es un temporizador y este avanza segun un tiempo especificado. COLLISION: Esta libreria agrega funciones extras para mover ventanas y en &amp;ldquo;escritorios&amp;rdquo;. AWESOME-WM-WIDGETS: Agrega widgtes para la wibar.
Config En esta configuracon me enfoque en que awesomewm tuviera una buena adaptacion con pywal, para esto cree una plantilla para pywall, si no ecuentra esta configuracion, el programa usara la configuracion por defecto que es la siguiente:</description></item><item><title>dwm</title><link>https://senchpimy.github.io/archivos/dwm/</link><pubDate>Thu, 06 Oct 2022 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/dwm/</guid><description>DWM es un administrador de ventanas escrito en C, y por esto es bastante mas rapido y consume menor RAM que AwesomeWM, el que yo utlizo es una version modificada de este, los patches que agregue en este fueron los siguientes:
CenteredMaster CenteredMaster agrega dos diferentes layouts para DWM
CoolAutostart CoolAutostart nos permite empezar diferentes procesos que especifiquemos al momento de ejecutar DWM
CycleLayouts Cycle layouts nos permite pasar ciclar entre los diferentes layouts que hayamos agregado.</description></item><item><title>Configuracion de Neovim</title><link>https://senchpimy.github.io/archivos/plugins/</link><pubDate>Wed, 10 Aug 2022 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/plugins/</guid><description>En esta entrada explicare todos los plugins que tengo en neovim y que funcion cumplen, asi sobre como estan configurados en mi init.vim y por que esos y no otros
Indentline Vim Indentline es un plugin simple que solo agrega una barra como &amp;ldquo;|&amp;rdquo; cuando se detecta un indentLine, mis configuraciones son las siguientes
let g:indentLine\_char\_list = [&amp;#39;|&amp;#39;, &amp;#39;¬¶&amp;#39;, &amp;#39;‚îÜ&amp;#39;, &amp;#39;‚îä&amp;#39;] let g:indentLine\_enabled = 0 nmap &amp;amp;ltspace&amp;amp;gtl &amp;amp;ltcmd&amp;amp;gtIndentLinesToggle&amp;amp;ltCR&amp;gt; autocmd FileType python IndentLinesToggle Lo que hacen es que conforme existan mas indentLines el plugin mostrara la linea correspondiente en alguno de esos 4 posibles estilos, y la segunda configuracion hace que el plugin este apagado por defecto pues yo solo lo ocupo para python.</description></item><item><title>Configuracion de Neovim</title><link>https://senchpimy.github.io/archivos/neovim/</link><pubDate>Sun, 31 Jul 2022 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/neovim/</guid><description>Neovim es un programa de edicion de texto basado en vim, este se diferencia de vim en que Neovim tiene integracion con el lenguaje de programacion lua, lo que lo hace mas extensible en el momento de usar plugins
Los plugins son lo mejor de vim/neovim pues aumentan la funcionalidad de el programa y aqui explicare los que uso actualmente, que hacen y como los configure
init.vim Init.vim es el archivo que lee por defecto neovim/vim este archivo esta escrito en vimscript ejecuta comandos de vim cada vez que vim se ejecuta</description></item><item><title>endercnc</title><link>https://senchpimy.github.io/archivos/endercnc/</link><pubDate>Sun, 31 Jul 2022 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/endercnc/</guid><description>Este proyecto es una modificacion a mi impresora una ender 3 para que esta sea capaza de funcionar como una CNC, lo que hice fue imprimir este adaptador (Version 4 para la ender 3) pues es una modificacion que me permitira hacer que a la ender 3 se le puedan montar varias herramientas de forma rapida sin tener la preocupacion que lo que se valla a montar no quede centrado.</description></item><item><title>Raspberry Pi Oled</title><link>https://senchpimy.github.io/archivos/oled/</link><pubDate>Sun, 31 Jul 2022 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/oled/</guid><description>Inspirado en este video decidi comprar una peque√±a pantalla como la del video y ponerle a mi raspberry pi una pantalla igualmente, pero experimentando con mi raspberry tuve le que borrar la memoria muchas veces teniendo que repetir todo el proceso del video, para evitar esto escribi el siguiente script de bash que atomatiza la instalacion de las librerias y configura la Raspberry pi para solamente ejecutar el script de python y tener la pantalla funcionando</description></item><item><title>Raspberry Pi Setup</title><link>https://senchpimy.github.io/archivos/raspberrysetup/</link><pubDate>Sun, 31 Jul 2022 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/raspberrysetup/</guid><description>Continuando con mi configuracion de mi Raspberry pi decidi ademas de la pantalla colocarle un ventilador y un boton de apagado encendido.
La configuracion y funcionamiento de el script de la pantalla ya fue explicado en este enlace.
Para el boton intente utilizar este script debido a que tiene la funcionalidad de apagar y prender la raspberry pi desde el mismo boton, este no fue implementado debido a que interferia con la comunicacion I2C de la pantalla por lo que escribi mi porpio programa, con antirebote y con un delay para que la Raspberry no se apague con movientos o con presiones accidentales, este es el codigo (Python)</description></item><item><title>Hugo</title><link>https://senchpimy.github.io/archivos/hugo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://senchpimy.github.io/archivos/hugo/</guid><description>Hugo es un programa que permite generar paginas web estaticas en base a plantillas, estas paginas son muy extensibles y es bastante facil crear un set de plantillas, aunque ya existem varias plantillas que se pueden usar para cualquier tipo de proposito, pues hugo no solo puede generar las paginas y luego guardarlas en el disco, si no tambien servirlas dinamicamente
Yo decidi reescribir mi pagina en markdown con ayuda de unos programas que hice para poder tener mayor flexibilidad y velocidad al agregar una nueva caracteristica, asi como escribir el estandar para la pagina una sola vez y que este funcione en globalmente sin tener que actualizarlo archivo por archivo.</description></item></channel></rss>